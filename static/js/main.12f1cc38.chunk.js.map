{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addOrRemoveGood","good","setState","currentState","includes","ind","indexOf","splice","push","removeAllGoogs","getTitle","title","length","join","reduce","text","listItem","i","arr","this","type","onClick","map","isGoodAdded","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GACb,IAAQJ,EAAiBI,EAAjBJ,aAER,GAAKA,EAAaK,SAASH,GAEpB,CACL,IAAMI,EAAMN,EAAaO,QAAQL,GAEjCF,EAAaQ,OAAOF,EAAK,QAJzBN,EAAaS,KAAKP,GAOpB,MAAO,CAAEF,oB,EAIbU,eAAiB,WACf,EAAKP,SAAS,CAAEH,aAAc,M,EAGhCW,SAAW,WACT,IAEIC,EAFIZ,EAAiB,EAAKD,MAAtBC,aAIR,QAAQ,GACN,KAA8B,IAAxBA,EAAaa,OACjBD,EAAQ,oBACR,MACF,KAA8B,IAAxBZ,EAAaa,OACjBD,EAAK,UAAMZ,EAAac,KAAK,IAAxB,gBACL,MACF,KAA8B,IAAxBd,EAAaa,OACjBD,EAAK,UAAMZ,EAAac,KAAK,SAAxB,iBACL,MACF,KAAMd,EAAaa,OAAS,EAC1BD,EAAQZ,EAAae,QAAO,SAACC,EAAMC,EAAUC,EAAGC,GAC9C,OAAU,IAAND,EACKD,EAAWD,EAGhBE,IAAMC,EAAIN,OAAS,EACf,GAAN,OAAUG,EAAV,gBAAsBC,EAAtB,iBAGI,GAAN,OAAUD,EAAV,aAAmBC,KAClB,IAKP,OAAOL,G,4CAGT,WAAU,IAAD,OACP,OACE,qCACsC,IAAnCQ,KAAKrB,MAAMC,aAAaa,QACvB,wBACEQ,KAAK,SACLC,QAAS,WACP,EAAKZ,kBAHT,eAUF,6BAAKU,KAAKT,aACV,6BACGd,EAAgB0B,KAAI,SAACrB,GACpB,IAAMsB,EAAc,EAAKzB,MAAMC,aAAaK,SAASH,GAErD,OACE,qCACE,6BAAgBA,GAAPA,GACT,wBACEmB,KAAK,SACLC,QAAS,WACP,EAAKrB,gBAAgBC,IAHzB,SAMGsB,EACG,OACA,0B,GAzFJC,IAAMC,WAoGT5B,ICjHf6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12f1cc38.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, { selectedGood: string[] }> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addOrRemoveGood = (good: string) => {\n    this.setState((currentState) => {\n      const { selectedGood } = currentState;\n\n      if (!selectedGood.includes(good)) {\n        selectedGood.push(good);\n      } else {\n        const ind = selectedGood.indexOf(good);\n\n        selectedGood.splice(ind, 1);\n      }\n\n      return { selectedGood };\n    });\n  };\n\n  removeAllGoogs = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  getTitle = () => {\n    const { selectedGood } = this.state;\n\n    let title;\n\n    switch (true) {\n      case (selectedGood.length === 0):\n        title = 'No selected goods';\n        break;\n      case (selectedGood.length === 1):\n        title = `${selectedGood.join('')} is selected`;\n        break;\n      case (selectedGood.length === 2):\n        title = `${selectedGood.join(' and ')} are selected`;\n        break;\n      case (selectedGood.length > 2):\n        title = selectedGood.reduce((text, listItem, i, arr) => {\n          if (i === 0) {\n            return listItem + text;\n          }\n\n          if (i === arr.length - 1) {\n            return `${text} and ${listItem} are selected`;\n          }\n\n          return `${text}, ${listItem}`;\n        }, '');\n        break;\n      default:\n    }\n\n    return title;\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.selectedGood.length !== 0 && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.removeAllGoogs();\n            }}\n          >\n            X\n\n          </button>\n        )}\n        <h1>{this.getTitle()}</h1>\n        <ul>\n          {goodsFromServer.map((good) => {\n            const isGoodAdded = this.state.selectedGood.includes(good);\n\n            return (\n              <>\n                <li key={good}>{good}</li>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.addOrRemoveGood(good);\n                  }}\n                >\n                  {isGoodAdded\n                    ? 'Hide'\n                    : 'Select' }\n                </button>\n              </>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}